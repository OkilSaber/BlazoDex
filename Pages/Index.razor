@page "/"
@using System.Text.Json;
@using System.Data.Entity;
@inject HttpClient Http
@using Newtonsoft.Json;

<div class="container">
    <label for="pokemon">Pokemon</label>
    <input @bind=@toSearch placeholder="ditto" name="pokemon" />
    @foreach (JsonElement pokemon in pokemons)
    {
        <div class="card">
            <p class="card__name">@pokemon.GetProperty("name").GetString()</p>
            <p class="card__name">Male:</p>
            <img src=@pokemon.GetProperty("sprites").GetProperty("front_default").GetString() class="card__image" />
            @if (pokemon.GetProperty("sprites").GetProperty("front_female").GetString() != null)
            {
                <p class="card__name">Female:</p>
                <img src=@pokemon.GetProperty("sprites").GetProperty("front_female").GetString() class="card__image" />
            }
        </div>
    }
    <button @onclick="GetAllPokemons">Show More</button>
</div>

@code {
    private string toSearch;

    private List<JsonElement> pokemons = new List<JsonElement>();
    private string url = "https://pokeapi.co/api/v2/pokemon/";

    private async Task GetAllPokemons()
    {
        var response = await Http.GetFromJsonAsync<JsonElement>(this.url);
        this.url = response.GetProperty("next").GetString();
        Console.WriteLine(this.url);
        for (var i = 0; i < response.GetProperty("results").GetArrayLength(); i++)
        {
            await GetPokemonInfos(response.GetProperty("results")[i]);
        }
    }

    private async Task GetPokemonInfos(JsonElement pokemon)
    {
        var response = await Http.GetFromJsonAsync<JsonElement>(pokemon.GetProperty("url").GetString());
        this.pokemons.Add(response);
    }
    protected override async Task OnInitializedAsync()
    {
        await GetAllPokemons();
    }
}